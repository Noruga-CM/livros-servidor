{"ast":null,"code":"class ControleLivro {\n  constructor(lista_livros) {\n    this.lista_livros = void 0;\n    this.lista_livros = lista_livros;\n  }\n  obterLivros() {\n    return lista_livros.filter(lista_livros => lista_livros.codigo >= 0);\n  }\n  incluirLivro(novoLivro) {\n    lista_livros.push(novoLivro);\n  }\n}\n\n/*\nconst editoras: Editora[] = [\n    {codEditora: 1, nome: \"Editora A\"}, \n    {codEditora: 2, nome: \"Editora C\"},\n    {codEditora: 3, nome: \"Editora B\"},\n  ];\n*/\nconst lista_livros = [{\n  codigo: 1,\n  codEditora: 1,\n  titulo: \"Livro A\",\n  resumo: \"Abecedário\",\n  autores: [\"Marcos\", \"Julio\"]\n}, {\n  codigo: 2,\n  codEditora: 2,\n  titulo: \"Livro C\",\n  resumo: \"Abecedário C\",\n  autores: [\"Fatima\", \"Antonio\"]\n}, {\n  codigo: 3,\n  codEditora: 3,\n  titulo: \"Livro B\",\n  resumo: \"Abecedário B\",\n  autores: [\"Juliana\", \"Joao\"]\n}];\nconst test_classe_livros = new ControleLivro(lista_livros);\nconst novoElemento = {\n  codigo: 4,\n  codEditora: 1,\n  titulo: \"Livro X\",\n  resumo: \"Abecedário D\",\n  autores: [\"José\", \"Mario\"]\n};\ntest_classe_livros.incluirLivro(novoElemento);\nconsole.log(\"Esses são os livros: \", test_classe_livros.obterLivros());\nconst livros_array = JSON.stringify(lista_livros);\nexport {};","map":{"version":3,"names":["ControleLivro","constructor","lista_livros","obterLivros","filter","codigo","incluirLivro","novoLivro","push","codEditora","titulo","resumo","autores","test_classe_livros","novoElemento","console","log","livros_array","JSON","stringify"],"sources":["/home/vinicius/Desktop/trabalho/livros-react/src/controle/ControleLivros.ts"],"sourcesContent":["import Livros from \"./Livros\";\ninterface Livro{\n    codigo: number; \n    codEditora: number; \n    titulo: string;\n    resumo: string;\n    autores: string[];\n}\n\nclass ControleLivro{\n    lista_livros: Livro[];\n    \n    constructor(lista_livros: Livro[]){\n        this.lista_livros = lista_livros;\n    }\n\n    obterLivros(): Livro[]{\n        return lista_livros.filter(lista_livros => lista_livros.codigo >= 0);\n    }\n    \n    incluirLivro(novoLivro): void{\n        lista_livros.push(novoLivro);\n    \n    }\n\n}\n\n/*\nconst editoras: Editora[] = [\n    {codEditora: 1, nome: \"Editora A\"}, \n    {codEditora: 2, nome: \"Editora C\"},\n    {codEditora: 3, nome: \"Editora B\"},\n  ];\n*/\nconst lista_livros: Livro[] = [\n    {codigo: 1, codEditora: 1, titulo: \"Livro A\", resumo: \"Abecedário\", autores:[\"Marcos\", \"Julio\"]},\n    {codigo: 2, codEditora: 2, titulo: \"Livro C\", resumo: \"Abecedário C\", autores:[\"Fatima\", \"Antonio\"]},\n    {codigo: 3, codEditora: 3, titulo: \"Livro B\", resumo: \"Abecedário B\", autores:[\"Juliana\", \"Joao\"]},\n];\n\nconst test_classe_livros = new ControleLivro(lista_livros);\nconst novoElemento = {codigo: 4, codEditora: 1, titulo: \"Livro X\", resumo: \"Abecedário D\", autores:[\"José\", \"Mario\"]};\ntest_classe_livros.incluirLivro(novoElemento);\nconsole.log(\"Esses são os livros: \",  test_classe_livros.obterLivros())\n\nconst livros_array: string = JSON.stringify(lista_livros);\n\n\nexport {};"],"mappings":"AASA,MAAMA,aAAa;EAGfC,WAAWA,CAACC,YAAqB,EAAC;IAAA,KAFlCA,YAAY;IAGR,IAAI,CAACA,YAAY,GAAGA,YAAY;EACpC;EAEAC,WAAWA,CAAA,EAAW;IAClB,OAAOD,YAAY,CAACE,MAAM,CAACF,YAAY,IAAIA,YAAY,CAACG,MAAM,IAAI,CAAC,CAAC;EACxE;EAEAC,YAAYA,CAACC,SAAS,EAAO;IACzBL,YAAY,CAACM,IAAI,CAACD,SAAS,CAAC;EAEhC;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAML,YAAqB,GAAG,CAC1B;EAACG,MAAM,EAAE,CAAC;EAAEI,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,YAAY;EAAEC,OAAO,EAAC,CAAC,QAAQ,EAAE,OAAO;AAAC,CAAC,EAChG;EAACP,MAAM,EAAE,CAAC;EAAEI,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,cAAc;EAAEC,OAAO,EAAC,CAAC,QAAQ,EAAE,SAAS;AAAC,CAAC,EACpG;EAACP,MAAM,EAAE,CAAC;EAAEI,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,cAAc;EAAEC,OAAO,EAAC,CAAC,SAAS,EAAE,MAAM;AAAC,CAAC,CACrG;AAED,MAAMC,kBAAkB,GAAG,IAAIb,aAAa,CAACE,YAAY,CAAC;AAC1D,MAAMY,YAAY,GAAG;EAACT,MAAM,EAAE,CAAC;EAAEI,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,cAAc;EAAEC,OAAO,EAAC,CAAC,MAAM,EAAE,OAAO;AAAC,CAAC;AACrHC,kBAAkB,CAACP,YAAY,CAACQ,YAAY,CAAC;AAC7CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAGH,kBAAkB,CAACV,WAAW,CAAC,CAAC,CAAC;AAEvE,MAAMc,YAAoB,GAAGC,IAAI,CAACC,SAAS,CAACjB,YAAY,CAAC;AAGzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}