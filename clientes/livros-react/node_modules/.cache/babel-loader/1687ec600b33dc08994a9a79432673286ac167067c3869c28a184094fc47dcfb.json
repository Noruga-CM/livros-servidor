{"ast":null,"code":"const baseURL = \"http://localhost:3030/livros\";\nclass ControleLivro {\n  constructor(lista_livros) {\n    this.lista_livros = void 0;\n    this.obterLivros = async () => {\n      try {\n        const response = await fetch(baseURL);\n        const livros = await response.json();\n        return livros;\n      } catch (error) {\n        console.error(\"Erro ao obter livros:\", error);\n        return [];\n      }\n    };\n    this.incluirLivro = async livro => {\n      try {\n        const livroMongo = {\n          _id: null,\n          codEditora: livro.codEditora,\n          titulo: livro.titulo,\n          resumo: livro.resumo,\n          autores: livro.autores\n        };\n        const response = await fetch(baseURL, {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(livroMongo)\n        });\n        return response.ok;\n      } catch (error) {\n        console.error(\"Erro ao incluir livro. Motivo: \", error);\n        return false;\n      }\n    };\n    this.excluir = async codigo => {\n      try {\n        const response = await fetch(`http://localhost:3000/livros/${codigo}`, {\n          method: 'DELETE'\n        });\n        return response.ok;\n      } catch (error) {\n        console.error(\"Erro ao excluir livro:\", error);\n        return false;\n      }\n    };\n    this.lista_livros = lista_livros;\n  }\n}\nexport { ControleLivro };","map":{"version":3,"names":["baseURL","ControleLivro","constructor","lista_livros","obterLivros","response","fetch","livros","json","error","console","incluirLivro","livro","livroMongo","_id","codEditora","titulo","resumo","autores","method","headers","body","JSON","stringify","ok","excluir","codigo"],"sources":["/home/vinicius/Desktop/trabalho/livros-servidor/livro-servidor/clientes/livros-react/src/controle/ControleLivros.ts"],"sourcesContent":["const baseURL = \"http://localhost:3030/livros\"; \n\ninterface Livro {\n    codigo: number;\n    codEditora: number;\n    titulo: string;\n    resumo: string;\n    autores: string[];\n}\n\ninterface LivroMongo {\n    _id: string | null;\n    codEditora: number;\n    titulo: string;\n    resumo: string;\n    autores: string[];\n}\n\nclass ControleLivro {\n    lista_livros?: LivroMongo[];\n\n    constructor(lista_livros?: LivroMongo[]) { \n        this.lista_livros = lista_livros;\n    }\n\n    obterLivros = async (): Promise<LivroMongo[]> => {\n        try {\n            const response = await fetch(baseURL);\n            const livros: LivroMongo[] = await response.json();\n            return livros;\n        } catch (error) {\n            console.error(\"Erro ao obter livros:\", error);\n            return [];\n        }\n    }\n\n    incluirLivro = async(livro: Livro) => {\n        try {\n\n            const livroMongo: LivroMongo = {\n                _id: null,\n                codEditora: livro.codEditora,\n                titulo: livro.titulo,\n                resumo: livro.resumo,\n                autores: livro.autores};\n\n\n            const response = await fetch(baseURL, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(livroMongo)});\n\n            return response.ok;\n        } catch (error) {\n            console.error(\"Erro ao incluir livro. Motivo: \", error);\n            return false;\n        }\n    }\n\n    excluir = async(codigo: string) => {\n        try {\n            const response = await fetch(`http://localhost:3000/livros/${codigo}`, {method: 'DELETE'});\n            return response.ok;\n        } \n        \n        catch (error) {\n            console.error(\"Erro ao excluir livro:\", error);\n            return false;\n        }\n    }\n}\n\nexport { ControleLivro };"],"mappings":"AAAA,MAAMA,OAAO,GAAG,8BAA8B;AAkB9C,MAAMC,aAAa,CAAC;EAGhBC,WAAWA,CAACC,YAA2B,EAAE;IAAA,KAFzCA,YAAY;IAAA,KAMZC,WAAW,GAAG,YAAmC;MAC7C,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,OAAO,CAAC;QACrC,MAAMO,MAAoB,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClD,OAAOD,MAAM;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,OAAO,EAAE;MACb;IACJ,CAAC;IAAA,KAEDE,YAAY,GAAG,MAAMC,KAAY,IAAK;MAClC,IAAI;QAEA,MAAMC,UAAsB,GAAG;UAC3BC,GAAG,EAAE,IAAI;UACTC,UAAU,EAAEH,KAAK,CAACG,UAAU;UAC5BC,MAAM,EAAEJ,KAAK,CAACI,MAAM;UACpBC,MAAM,EAAEL,KAAK,CAACK,MAAM;UACpBC,OAAO,EAAEN,KAAK,CAACM;QAAO,CAAC;QAG3B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACN,OAAO,EAAE;UAClCmB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,UAAU;QAAC,CAAC,CAAC;QAEtC,OAAOR,QAAQ,CAACmB,EAAE;MACtB,CAAC,CAAC,OAAOf,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,OAAO,KAAK;MAChB;IACJ,CAAC;IAAA,KAEDgB,OAAO,GAAG,MAAMC,MAAc,IAAK;MAC/B,IAAI;QACA,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BoB,MAAO,EAAC,EAAE;UAACP,MAAM,EAAE;QAAQ,CAAC,CAAC;QAC1F,OAAOd,QAAQ,CAACmB,EAAE;MACtB,CAAC,CAED,OAAOf,KAAK,EAAE;QACVC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,OAAO,KAAK;MAChB;IACJ,CAAC;IAjDG,IAAI,CAACN,YAAY,GAAGA,YAAY;EACpC;AAiDJ;AAEA,SAASF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}