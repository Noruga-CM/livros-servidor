{"ast":null,"code":"class ControleLivro {\n  constructor(lista_livros) {\n    this.lista_livros = void 0;\n    this.lista_livros = lista_livros;\n  }\n  obterLivros() {\n    return this.lista_livros.filter(livro => livro.codigo >= 0);\n  }\n  incluirLivro(lista) {\n    console.log(\"x: \", lista[0].codigo);\n    /*\n    if (this.lista_livros.length > 0){\n        const maior = Math.max(this.lista_livros.map(livro => livro.codigo)); \n        this.lista.codigo = maior + 1; \n    } else{\n        this.lista.codigo = 1; \n    }*/\n    this.lista_livros = this.lista_livros.concat(lista);\n  }\n}\nconst lista_livros = [{\n  codigo: 1,\n  codEditora: 1,\n  titulo: \"Livro A\",\n  resumo: \"Abecedário\",\n  autores: [\"Marcos\", \"Julio\"]\n}, {\n  codigo: 2,\n  codEditora: 2,\n  titulo: \"Livro C\",\n  resumo: \"Abecedário C\",\n  autores: [\"Fatima\", \"Antonio\"]\n}, {\n  codigo: 3,\n  codEditora: 3,\n  titulo: \"Livro B\",\n  resumo: \"Abecedário B\",\n  autores: [\"Juliana\", \"Joao\"]\n}];\nconst test_classe_livros = new ControleLivro(lista_livros);\nconst novoLivro = [{\n  codigo: 4,\n  codEditora: 1,\n  titulo: \"Livro D\",\n  resumo: \"Abecedário D\",\n  autores: [\"José\", \"Mario\"]\n}];\ntest_classe_livros.incluirLivro(novoLivro);\nconsole.log(\"Esses são os livros: \", test_classe_livros.obterLivros());\nconst livros_array = JSON.stringify(lista_livros);\nexport {};","map":{"version":3,"names":["ControleLivro","constructor","lista_livros","obterLivros","filter","livro","codigo","incluirLivro","lista","console","log","concat","codEditora","titulo","resumo","autores","test_classe_livros","novoLivro","livros_array","JSON","stringify"],"sources":["/home/vinicius/Desktop/trabalho/livros-react/src/controle/ControleLivros.ts"],"sourcesContent":["import Livros from \"./Livros\";\ninterface Livro{\n    codigo: number; \n    codEditora: number; \n    titulo: string;\n    resumo: string;\n    autores: string[];\n}\n\nclass ControleLivro {\n    lista_livros: Livro[];\n    \n    constructor(lista_livros: Livro[]) {\n        this.lista_livros = lista_livros;\n    }\n\n    obterLivros(): Livro[] {\n        return this.lista_livros.filter(livro => livro.codigo >= 0);\n    }\n    \n    incluirLivro(lista: Livro[]): void { \n        console.log(\"x: \", lista[0].codigo);\n        /*\n        if (this.lista_livros.length > 0){\n            const maior = Math.max(this.lista_livros.map(livro => livro.codigo)); \n            this.lista.codigo = maior + 1; \n        } else{\n            this.lista.codigo = 1; \n        }*/\n        this.lista_livros = this.lista_livros.concat(lista);\n        \n    }\n\n}\n\n\nconst lista_livros: Livro[] = [\n    {codigo: 1, codEditora: 1, titulo: \"Livro A\", resumo: \"Abecedário\", autores:[\"Marcos\", \"Julio\"]},\n    {codigo: 2, codEditora: 2, titulo: \"Livro C\", resumo: \"Abecedário C\", autores:[\"Fatima\", \"Antonio\"]},\n    {codigo: 3, codEditora: 3, titulo: \"Livro B\", resumo: \"Abecedário B\", autores:[\"Juliana\", \"Joao\"]},\n];\n\nconst test_classe_livros = new ControleLivro(lista_livros);\nconst novoLivro: Livro[] = [{codigo: 4, codEditora: 1, titulo: \"Livro D\", resumo: \"Abecedário D\", autores:[\"José\", \"Mario\"]}];\ntest_classe_livros.incluirLivro(novoLivro);\nconsole.log(\"Esses são os livros: \",  test_classe_livros.obterLivros());\n\nconst livros_array: string = JSON.stringify(lista_livros);\n\n\nexport {};"],"mappings":"AASA,MAAMA,aAAa,CAAC;EAGhBC,WAAWA,CAACC,YAAqB,EAAE;IAAA,KAFnCA,YAAY;IAGR,IAAI,CAACA,YAAY,GAAGA,YAAY;EACpC;EAEAC,WAAWA,CAAA,EAAY;IACnB,OAAO,IAAI,CAACD,YAAY,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,IAAI,CAAC,CAAC;EAC/D;EAEAC,YAAYA,CAACC,KAAc,EAAQ;IAC/BC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,KAAK,CAAC,CAAC,CAAC,CAACF,MAAM,CAAC;IACnC;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACJ,YAAY,GAAG,IAAI,CAACA,YAAY,CAACS,MAAM,CAACH,KAAK,CAAC;EAEvD;AAEJ;AAGA,MAAMN,YAAqB,GAAG,CAC1B;EAACI,MAAM,EAAE,CAAC;EAAEM,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,YAAY;EAAEC,OAAO,EAAC,CAAC,QAAQ,EAAE,OAAO;AAAC,CAAC,EAChG;EAACT,MAAM,EAAE,CAAC;EAAEM,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,cAAc;EAAEC,OAAO,EAAC,CAAC,QAAQ,EAAE,SAAS;AAAC,CAAC,EACpG;EAACT,MAAM,EAAE,CAAC;EAAEM,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,cAAc;EAAEC,OAAO,EAAC,CAAC,SAAS,EAAE,MAAM;AAAC,CAAC,CACrG;AAED,MAAMC,kBAAkB,GAAG,IAAIhB,aAAa,CAACE,YAAY,CAAC;AAC1D,MAAMe,SAAkB,GAAG,CAAC;EAACX,MAAM,EAAE,CAAC;EAAEM,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,cAAc;EAAEC,OAAO,EAAC,CAAC,MAAM,EAAE,OAAO;AAAC,CAAC,CAAC;AAC7HC,kBAAkB,CAACT,YAAY,CAACU,SAAS,CAAC;AAC1CR,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAGM,kBAAkB,CAACb,WAAW,CAAC,CAAC,CAAC;AAEvE,MAAMe,YAAoB,GAAGC,IAAI,CAACC,SAAS,CAAClB,YAAY,CAAC;AAGzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}