{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nclass ControleLivro {\n  constructor(lista_livros) {\n    this.lista_livros = void 0;\n    this.lista_livros = lista_livros;\n  }\n  obterLivros() {\n    return this.lista_livros.filter(livro => livro.codigo >= 0);\n  }\n  incluirLivro(lista) {\n    console.log(\"x: \", this.lista_livros.length);\n    const tam_lista = this.lista_livros.length;\n    if (tam_lista >= 0) {\n      lista[0].codigo = tam_lista + 1;\n    } else {\n      lista[0].codigo = 1;\n    }\n    this.lista_livros = this.lista_livros.concat(lista);\n  }\n  excluir(codigo) {\n    const index = lista_livros.findIndex(lista_livros => lista_livros.codigo === codigo);\n    lista_livros.splice(index, 1);\n  }\n}\nconst ListaLivros = () => {\n  _s();\n  const [lista_livros, setListaLivros] = useState([{\n    codigo: 1,\n    codEditora: 1,\n    titulo: \"Livro A\",\n    resumo: \"Abecedário\",\n    autores: [\"Marcos\", \"Julio\"]\n  }, {\n    codigo: 2,\n    codEditora: 2,\n    titulo: \"Livro C\",\n    resumo: \"Abecedário C\",\n    autores: [\"Fatima\", \"Antonio\"]\n  }, {\n    codigo: 3,\n    codEditora: 3,\n    titulo: \"Livro B\",\n    resumo: \"Abecedário B\",\n    autores: [\"Juliana\", \"Joao\"]\n  }]);\n};\n_s(ListaLivros, \"RNqGCFsjDrqDOvYCrzfwllmvQ0k=\");\n_c = ListaLivros;\nconst novoLivro = [{\n  codigo: 1,\n  codEditora: 1,\n  titulo: \"Livro D\",\n  resumo: \"Abecedário D\",\n  autores: [\"José\", \"Mario\"]\n}];\nconst test_classe_livros = new ControleLivro(ListaLivros);\ntest_classe_livros.incluirLivro(novoLivro);\n/*\n\n\nconsole.log(\"Esses são os livros: \",  test_classe_livros.obterLivros());\nconst livros_array: string = JSON.stringify(lista_livros);\n*/\n\nexport { ControleLivro, ListaLivros };\nvar _c;\n$RefreshReg$(_c, \"ListaLivros\");","map":{"version":3,"names":["useState","ControleLivro","constructor","lista_livros","obterLivros","filter","livro","codigo","incluirLivro","lista","console","log","length","tam_lista","concat","excluir","index","findIndex","splice","ListaLivros","_s","setListaLivros","codEditora","titulo","resumo","autores","_c","novoLivro","test_classe_livros","$RefreshReg$"],"sources":["/home/vinicius/Desktop/trabalho/livros-react/src/controle/ControleLivros.ts"],"sourcesContent":["import Livros from \"./Livros\";\nimport { useState } from \"react\";\ninterface Livro{\n    codigo: number; \n    codEditora: number; \n    titulo: string;\n    resumo: string;\n    autores: string[];\n}\n\nclass ControleLivro {\n    lista_livros: Livro[];\n    \n    constructor(lista_livros: Livro[]) {\n        this.lista_livros = lista_livros;\n    }\n\n    obterLivros(): Livro[] {\n        return this.lista_livros.filter(livro => livro.codigo >= 0);\n    }\n    \n    incluirLivro(lista: Livro[]): void { \n        console.log(\"x: \", this.lista_livros.length);\n        const tam_lista: number = this.lista_livros.length; \n        if (tam_lista >= 0){\n            lista[0].codigo = tam_lista + 1; \n        }else{\n            lista[0].codigo = 1;\n        }\n        \n        this.lista_livros = this.lista_livros.concat(lista);\n        \n    }\n    excluir(codigo: number): void{\n        const index: number = lista_livros.findIndex(lista_livros => lista_livros.codigo === codigo); \n        lista_livros.splice(index, 1);\n        \n    }\n\n}\n\nconst ListaLivros = () => {\n    const [lista_livros, setListaLivros] = useState([\n        {codigo: 1, codEditora: 1, titulo: \"Livro A\", resumo: \"Abecedário\", autores:[\"Marcos\", \"Julio\"]},\n        {codigo: 2, codEditora: 2, titulo: \"Livro C\", resumo: \"Abecedário C\", autores:[\"Fatima\", \"Antonio\"]},\n        {codigo: 3, codEditora: 3, titulo: \"Livro B\", resumo: \"Abecedário B\", autores:[\"Juliana\", \"Joao\"]},\n    ]);\n};\nconst novoLivro: Livro[] = [{codigo: 1, codEditora: 1, titulo: \"Livro D\", resumo: \"Abecedário D\", autores:[\"José\", \"Mario\"]}];\nconst test_classe_livros = new ControleLivro(ListaLivros);\ntest_classe_livros.incluirLivro(novoLivro);\n/*\n\n\nconsole.log(\"Esses são os livros: \",  test_classe_livros.obterLivros());\nconst livros_array: string = JSON.stringify(lista_livros);\n*/\n\n\n\nexport {ControleLivro, Livro, ListaLivros};"],"mappings":";AACA,SAASA,QAAQ,QAAQ,OAAO;AAShC,MAAMC,aAAa,CAAC;EAGhBC,WAAWA,CAACC,YAAqB,EAAE;IAAA,KAFnCA,YAAY;IAGR,IAAI,CAACA,YAAY,GAAGA,YAAY;EACpC;EAEAC,WAAWA,CAAA,EAAY;IACnB,OAAO,IAAI,CAACD,YAAY,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,IAAI,CAAC,CAAC;EAC/D;EAEAC,YAAYA,CAACC,KAAc,EAAQ;IAC/BC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE,IAAI,CAACR,YAAY,CAACS,MAAM,CAAC;IAC5C,MAAMC,SAAiB,GAAG,IAAI,CAACV,YAAY,CAACS,MAAM;IAClD,IAAIC,SAAS,IAAI,CAAC,EAAC;MACfJ,KAAK,CAAC,CAAC,CAAC,CAACF,MAAM,GAAGM,SAAS,GAAG,CAAC;IACnC,CAAC,MAAI;MACDJ,KAAK,CAAC,CAAC,CAAC,CAACF,MAAM,GAAG,CAAC;IACvB;IAEA,IAAI,CAACJ,YAAY,GAAG,IAAI,CAACA,YAAY,CAACW,MAAM,CAACL,KAAK,CAAC;EAEvD;EACAM,OAAOA,CAACR,MAAc,EAAO;IACzB,MAAMS,KAAa,GAAGb,YAAY,CAACc,SAAS,CAACd,YAAY,IAAIA,YAAY,CAACI,MAAM,KAAKA,MAAM,CAAC;IAC5FJ,YAAY,CAACe,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;EAEjC;AAEJ;AAEA,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACjB,YAAY,EAAEkB,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAC5C;IAACO,MAAM,EAAE,CAAC;IAAEe,UAAU,EAAE,CAAC;IAAEC,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE,YAAY;IAAEC,OAAO,EAAC,CAAC,QAAQ,EAAE,OAAO;EAAC,CAAC,EAChG;IAAClB,MAAM,EAAE,CAAC;IAAEe,UAAU,EAAE,CAAC;IAAEC,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE,cAAc;IAAEC,OAAO,EAAC,CAAC,QAAQ,EAAE,SAAS;EAAC,CAAC,EACpG;IAAClB,MAAM,EAAE,CAAC;IAAEe,UAAU,EAAE,CAAC;IAAEC,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE,cAAc;IAAEC,OAAO,EAAC,CAAC,SAAS,EAAE,MAAM;EAAC,CAAC,CACrG,CAAC;AACN,CAAC;AAACL,EAAA,CANID,WAAW;AAAAO,EAAA,GAAXP,WAAW;AAOjB,MAAMQ,SAAkB,GAAG,CAAC;EAACpB,MAAM,EAAE,CAAC;EAAEe,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,cAAc;EAAEC,OAAO,EAAC,CAAC,MAAM,EAAE,OAAO;AAAC,CAAC,CAAC;AAC7H,MAAMG,kBAAkB,GAAG,IAAI3B,aAAa,CAACkB,WAAW,CAAC;AACzDS,kBAAkB,CAACpB,YAAY,CAACmB,SAAS,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAIA,SAAQ1B,aAAa,EAASkB,WAAW;AAAE,IAAAO,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}